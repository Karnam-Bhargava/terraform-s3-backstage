name: s3-workflow

on:
  workflow_dispatch:
    inputs:
      bucket_name:
          description: 'Buckect Name'
          required: true
      region:
          description: 'AWS Region for the bucket'
          required: true
      action:
          description: 'Action to perform (apply/destroy)'
          required: true

jobs: 
  terraform_apply:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Format
      run: terraform fmt
      
    - name: Terraform Validate
      run: terraform validate
     
    - name: Terraform Apply
      run: terraform apply -var bucket_name=${{ github.event.inputs.bucket_name }} -var region=${{ github.event.inputs.region }} -auto-approve
     

  terraform_destroy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Format
      run: terraform fmt
      
    - name: Terraform Validate
      run: terraform validate
      
    - name: Terraform Destroy
      run: terraform destroy -var bucket_name=${{ github.event.inputs.s3bucketName }} -var region=${{ github.event.inputs.awsRegion }} -auto-approve
